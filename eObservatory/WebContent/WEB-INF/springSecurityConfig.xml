<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
     
     <global-method-security pre-post-annotations="enabled" />

     <!-- <http use-expressions="true" auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint"> -->
     <http use-expressions="true" auto-config="true">
         <intercept-url pattern="/authentication/login" access="hasRole('ROLE_ANONYMOUS')" />
         <intercept-url pattern="/resources/**" access="hasRole('ROLE_USER') or hasRole('ROLE_ANONYMOUS')" />
         <intercept-url pattern="/user/preparesignup" access="hasRole('ROLE_ANONYMOUS')" />
         <intercept-url pattern="/user/signup" access="hasRole('ROLE_ANONYMOUS')" />
         <intercept-url pattern="/**" access="isAuthenticated()" />
         <form-login login-page="/authentication/login"
                     default-target-url="/index"
                     always-use-default-target="true"
                     authentication-failure-url="/authentication/login?state=failure" />

         <logout />
     </http>
     
     <authentication-manager>
    	<authentication-provider user-service-ref="userDetailsService">
    	    <password-encoder hash="md5" />
    	</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="userDetailsService" class="org.eobservatory.service.impl.MongoUserDetailServiceImpl"/>
<!-- 

     <authentication-manager>
         <authentication-provider>
             <password-encoder hash="md5" base64="true" />
             <jdbc-user-service
                   data-source-ref="hibernateDataSource"
                   
                   users-by-username-query="SELECT u.id_usuario AS username, u.clave as password, case when u.id_estado = 'A' then TRUE when u.id_estado = 'X' then FALSE end AS enabled
                                            FROM adm_usuario u
                                            WHERE u.id_usuario = ? 
                                            GROUP BY u.id_usuario, u.clave, u.id_estado"

                   authorities-by-username-query="select username, authority from busca_usuarios_roles (?) as (username character varying, authority text)" />

         </authentication-provider>

     </authentication-manager>-->

</beans:beans>
